{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/Navigation/Navigation.jsx","components/AddPostForm/AddPostForm.jsx","components/PostCard/PostCard.jsx","components/PostFeed/PostFeed.jsx","utils/postApi.js","components/VibeCard/VibeCard.jsx","components/Vibe/Vibe.jsx","pages/Feed/Feed.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","getAll","fetch","headers","tokenService","then","res","json","signup","method","body","ok","Error","logout","login","creds","Headers","stringify","getUser","SignUpPage","useState","setError","username","email","password","passwordConf","emoji","state","setState","history","useHistory","handleChange","e","target","name","value","a","key","preventDefault","formData","FormData","append","userService","handleSignUpOrLogin","push","console","log","message","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Image","src","Form","autoComplete","onSubmit","Segment","stacked","Input","placeholder","onChange","required","type","FormGroup","row","defaultValue","disabled","Button","color","fluid","size","LoginPage","Message","to","emojis","Navigation","handleLogout","clearing","onClick","AddPostForm","content","post","handleAddPost","PostCard","PostFeed","posts","map","create","VibeCard","Vibe","users","Feed","setPosts","setUsers","postsAPI","data","useEffect","getPosts","getUsers","App","setUser","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a468f8dc.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorMessage(props){\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(token) {\n    if (token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nexport function getAll() {\n  return fetch(BASE_URL + 'users', {\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n  })\n  .then(res => res.json());\n}\n\n\nexport default {\n  signup, \n  logout,\n  login,\n  getUser,\n  getAll,\n};","import React, { useState } from 'react';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react'\nimport userService from '../../utils/userService';\nimport { useHistory } from 'react-router-dom';\nimport { Col, FormGroup, Label, Input, FormText } from 'reactstrap';\n\n\nexport default function SignUpPage(props){\n \n  const [error, setError ] = useState('')\n  const [selectedFile, setSelectedFile] = useState('')\n  const [state, setState]  = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordConf: '',\n    emoji: ''\n  });\n\n  const history = useHistory()\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  function handleChange(e){\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  async function handleSubmit(e){\n    // add this later\n    e.preventDefault();\n\n    // Photos have to be sent over as FormData\n    // They send over the form in multiparts (multipe requests to the server)\n\n    const formData = new FormData();\n\n\n    // generating rest of form data by looping over the state object!\n    for (let key in state){\n      formData.append(key, state[key])\n    }\n    //fyi if you log out formData you won't see anything you have to use the folllowing\n\n    // Display the key/value pairs\n    // for (var pair of formData.entries()) {\n    //   console.log(pair[0]+ ', ' + pair[1]); \n    // }\n\n    // SO now we have are data prepared to send over in our formData object\n    try {\n      // refere to the utils/userService, to look at the signup fetch function\n      await userService.signup(formData);\n      // setTheUser in our app\n      props.handleSignUpOrLogin() // gets the token from localstorage and updates the user state in our app.js\n      // with the correct user object from the current token\n      // then route to the homepage\n      history.push('/') // defined above from react-router-dom\n      // after this we can go whereever\n\n    } catch(err){\n      console.log(err.message)\n      setError(err.message)\n    }\n\n  }\n\n  function handleFileInput(e){\n    setSelectedFile(e.target.files[0])\n  }\n \n    \n    return (\n        <>\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n                <Image src='yass.png' />           \n                <Form autoComplete=\"off\"  onSubmit={handleSubmit}>\n                <Segment stacked>               \n                    <Form.Input                    \n                      name=\"username\"\n                      placeholder=\"username\"\n                      value={state.username}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Input\n                      type=\"email\"                  \n                      name=\"email\"\n                      placeholder=\"email\"\n                      value={ state.email}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Input             \n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"password\"\n                      value={ state.password}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Input     \n                      name=\"passwordConf\"\n                      type=\"password\"\n                      placeholder=\"Confirm Password\"\n                      value={ state.passwordConf}\n                      onChange={handleChange}\n                      required\n                    />\n                    <FormGroup row>\n                        <select name=\"emoji\" defaultValue=\"\" value={state.emoji} onChange={handleChange} required>\n                            <option disabled={true} value=\"\">Pick an emoji</option>\n                            <option value=\"0\">👻</option>\n                            <option value=\"1\">👽</option>\n                            <option value=\"2\">🧑</option>\n                            <option value=\"3\">👩</option>\n                            <option value=\"4\">👨</option>\n                            <option value=\"5\">🧓</option>\n                            <option value=\"6\">👵</option>\n                            <option value=\"7\">👴</option>                          \n                        </select>\n                    </FormGroup>\n                    <br/>\n                    <Button\n                    color=\"blue\"\n                    fluid\n                    size=\"large\"\n                    type=\"submit\"\n                    className=\"btn\"\n                    >\n                    Signup\n                  </Button>\n                  </Segment>\n                  {error ? <ErrorMessage error={error} /> : null}\n                </Form>\n               \n            </Grid.Column>\n          </Grid>\n        </>\n      );   \n    \n}\n","import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\n\nexport default function LoginPage(props) {\n  const [error, setError] = useState(\"\");\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const history = useHistory();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      await userService.login(state);\n      // Route to wherever you want!\n      props.handleSignUpOrLogin();\n      history.push(\"/\");\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      setError(err.message);\n    }\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n        <Image src='yass.png' />  \n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={state.email}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required\n              />\n              <Button\n                color=\"blue\"\n                fluid\n                size=\"large\"\n                type=\"submit\"\n                className=\"btn\"\n              >\n                Sign In\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            Are you new here? <Link to=\"/signup\">Sign Up!</Link>\n          </Message>\n          {error ? <ErrorMessage error={error} /> : null}\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { Header, Segment, Image, Icon } from 'semantic-ui-react';\nimport './Navigation.css';\n\nconst emojis = [\"👻\",\"👽\",\"🧑\",\"👩\",\"👨\",\"🧓\",\"👵\",\"👴\"];\n\nexport default function Navigation({user, handleLogout}){\n    return (\n        <Segment className=\"navigation\" clearing>\n            <div className=\"title\">\n                <div className=\"yass-title\">YASS👍</div>  \n                <div className=\"or-title\">or</div>  \n                <div className=\"pass-title\">PASS👎</div>  \n            </div>\n            <div className=\"emoji\">{emojis[user]}</div>\n            <div className=\"logout\"><Link to='' onClick={handleLogout}>Logout</Link></div>\n        </Segment>\n    )\n}","import React, { useState } from 'react';\nimport { Button, Dropdown, Form, Grid, Header, Image, Segment } from 'semantic-ui-react';\n\nexport default function AddPostForm(props, {user}){\n    const [state, setState] = useState({\n        content: \"\"\n    })\n\n    function handleChange(e) {\n        setState({\n          ...state,\n          [e.target.name]: e.target.value,\n        });\n      }\n\n    function handleSubmit(e){\n        e.preventDefault();\n        const post = state;\n        console.log(state);\n        console.log(post)\n        props.handleAddPost(post)\n    }\n\n    return (\n    <>\n    <Grid textAlign='center'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n          <Form autoComplete=\"off\"  onSubmit={handleSubmit}>            \n              <Form.Input\n              name=\"content\"\n              placeholder=\"Ask about something here...\"\n              value={state.content}\n              onChange={handleChange}\n              required\n              />\n              <Button\n              type=\"submit\"\n              className=\"btn\">\n                  See what people think\n                  </Button>\n                  </Form>\n                  </Grid.Column>\n                  </Grid>\n\n        </>\n    )\n\n\n\n\n}","import React from \"react\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\n\nfunction PostCard({ post }) {\n \n\n    const clickHandler = 0;\n\n\n    return (\n        <div className=\"post-card\">\n          {post.content}\n        </div>\n      );\n}\n\nexport default PostCard;\n","import React from \"react\";\nimport { Card, Loader, Grid, Dimmer, Segment, Image } from \"semantic-ui-react\";\nimport PostCard from \"../PostCard/PostCard\";\n\nexport default function PostFeed({\n  posts,\n}) {\n  return (\n    <div className = \"posts\">\n\n      {posts.map((post) => {\n        return (\n          <PostCard\n            post={post}\n\n          />\n        );\n      })}\n    </div>\n  );\n}","const BASE_URL = '/api/posts/';\n\nexport function create(post) {\n    return fetch(BASE_URL, {\n      method: 'POST',\n      body: JSON.stringify(post),\n      headers: {'Content-Type': 'application/json'},\n    }).then(res => res.json())\n}\n\nexport function getAll(){\n    return fetch(BASE_URL).then(res => res.json());\n}\n\nexport default {\n    create,\n    getAll\n  };","import React from \"react\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport './VibeCard.css';\n\nfunction VibeCard({ user }) {\n    const emojis = [\"👻\",\"👽\",\"🧑\",\"👩\",\"👨\",\"🧓\",\"👵\",\"👴\"];\n\n\n    return (\n        <div className=\"vibe-card\">\n            <div className=\"vibe-name\">\n                {user.username}\n            </div>\n            <div className=\"emoji-vibe\">\n                {emojis[user.emoji]}\n            </div> \n        </div>\n      );\n}\n\nexport default VibeCard;","import React from \"react\";\nimport { Card, Loader, Grid, Dimmer, Segment, Image } from \"semantic-ui-react\";\nimport VibeCard from \"../VibeCard/VibeCard\";\n\nexport default function Vibe({\n  users,\n}) {\n  return (\n    <div className = \"vibe\">\n      You Vibe With\n      {users.map((user) => {\n        return (\n          <VibeCard\n            user={user}\n\n          />\n          \n        );\n      })}\n            {users.map((user) => {\n        return (\n          <VibeCard\n            user={user}\n\n          />\n          \n        );\n      })}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Navigation from '../../components/Navigation/Navigation';\nimport AddPostForm from \"../../components/AddPostForm/AddPostForm\";\nimport \"./Feed.css\";\nimport PostFeed from \"../../components/PostFeed/PostFeed\";\nimport * as postsAPI from \"../../utils/postApi\";\nimport * as userService from \"../../utils/userService\";\nimport Vibe from '../../components/Vibe/Vibe';\nimport Footer from '../../components/Footer/Footer';\n\nexport default function Feed({ user, handleLogout}) {\n    const [posts, setPosts] = useState([]);\n    const [users, setUsers] = useState([]);\n\n    function handleAddPost(post){\n        const data = postsAPI.create(post);\n    }\n\nasync function getPosts() {\n    try {\n      const data = await postsAPI.getAll();\n      setPosts([...data.posts]);\n    } catch (err) {\n      console.log(err, \" this is the error\");\n    }\n  }\n\n  async function getUsers() {\n    try {\n      const data = await userService.getAll();\n      setUsers([...data.users]);\n    } catch (err) {\n      console.log(err, \" this is the error\");\n    }\n  }\n\nuseEffect(() => {\n    getPosts();\n    getUsers();\n  }, []);\n\n\n    return (\n        <>\n        <div className=\"feed-container\">\n             <Navigation user={user.emoji} handleLogout={handleLogout} />\n             <div className=\"vibe-container\">\n                 <Vibe users={users} />\n            </div>\n             <div className=\"post-container\">\n                 <AddPostForm handleAddPost={handleAddPost} user={user}/> \n                 <PostFeed posts={posts}/>\n            </div>\n         </div>\n\n                     </>\n    )\n}\n\n\n\n","import React, {useState} from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport userService from '../../utils/userService';\nimport Feed from '../Feed/Feed';\nimport Vibe from '../../components/Vibe/Vibe';\nimport Navigation from '../../components/Navigation/Navigation';\n\n\nfunction App() {\n\n  const [user, setUser] = useState(userService.getUser()) // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like \n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin(){\n    setUser(userService.getUser()) // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout(){\n    userService.logout();\n    setUser({user: null})\n  }\n\n  return (\n    <div className=\"App\">\n      <Switch>\n          <Route exact path=\"/login\">\n             <LoginPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          <Route exact path=\"/signup\">\n             <SignupPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          {userService.getUser() ? \n            <> \n             <Switch>\n                <Route exact path=\"/\">\n                  <Feed handleLogout={handleLogout} user={user} />\n                </Route>\n            </Switch>\n            </>\n            :\n            <Redirect to='/login'/>\n          }\n  \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}